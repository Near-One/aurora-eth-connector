pub const ERR_VERIFY_PROOF: &str = "ERR_VERIFY_PROOF";
pub const ERR_BORSH_DESERIALIZE: &str = "ERR_BORSH_DESERIALIZE";
pub const ERR_BORSH_SERIALIZE: &str = "ERR_BORSH_SERIALIZE";
pub const ERR_BALANCE_OVERFLOW: &[u8; 20] = b"ERR_BALANCE_OVERFLOW";
pub const ERR_PROOF_EXIST: &[u8; 15] = b"ERR_PROOF_EXIST";
pub const ERR_WRONG_EVENT_ADDRESS: &[u8; 23] = b"ERR_WRONG_EVENT_ADDRESS";
pub const ERR_RLP_FAILED: &[u8; 14] = b"ERR_RLP_FAILED";
pub const ERR_PARSE_DEPOSIT_EVENT: &[u8; 23] = b"ERR_PARSE_DEPOSIT_EVENT";
pub const ERR_INVALID_EVENT_MESSAGE_FORMAT: &[u8; 32] = b"ERR_INVALID_EVENT_MESSAGE_FORMAT";
pub const ERR_INVALID_SENDER: &[u8; 18] = b"ERR_INVALID_SENDER";
pub const ERR_INVALID_AMOUNT: &[u8; 18] = b"ERR_INVALID_AMOUNT";
pub const ERR_INVALID_FEE: &[u8; 15] = b"ERR_INVALID_FEE";
pub const ERR_INVALID_ON_TRANSFER_MESSAGE_FORMAT: &[u8; 38] =
    b"ERR_INVALID_ON_TRANSFER_MESSAGE_FORMAT";
pub const ERR_INVALID_ON_TRANSFER_MESSAGE_HEX: &[u8; 35] = b"ERR_INVALID_ON_TRANSFER_MESSAGE_HEX";
pub const ERR_INVALID_ON_TRANSFER_MESSAGE_DATA: &[u8; 36] = b"ERR_INVALID_ON_TRANSFER_MESSAGE_DATA";
pub const ERR_INVALID_ACCOUNT_ID: &[u8; 22] = b"ERR_INVALID_ACCOUNT_ID";
pub const ERR_OVERFLOW_NUMBER: &[u8; 19] = b"ERR_OVERFLOW_NUMBER";
pub const ERR_TOTAL_SUPPLY_OVERFLOW: &str = "ERR_TOTAL_SUPPLY_OVERFLOW";
pub const ERR_NOT_ENOUGH_BALANCE: &[u8; 22] = b"ERR_NOT_ENOUGH_BALANCE";
pub const ERR_TOTAL_SUPPLY_UNDERFLOW: &[u8; 26] = b"ERR_TOTAL_SUPPLY_UNDERFLOW";
pub const ERR_ZERO_AMOUNT: &[u8; 15] = b"ERR_ZERO_AMOUNT";
pub const ERR_SENDER_EQUALS_RECEIVER: &[u8; 26] = b"ERR_SENDER_EQUALS_RECEIVER";
pub const ERR_NOT_ENOUGH_BALANCE_FOR_FEE: &str = "ERR_NOT_ENOUGH_BALANCE_FOR_FEE";

pub struct ProofUsed;

impl AsRef<[u8]> for ProofUsed {
    fn as_ref(&self) -> &[u8] {
        ERR_PROOF_EXIST
    }
}
